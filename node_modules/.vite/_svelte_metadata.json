{"compilerOptions":{"css":"external","dev":true,"hmr":true},"configFile":false,"extensions":[".svelte"],"preprocess":[{"name":"vite-preprocess","style":"async ({ attributes, content, filename = \"\" }) => {\n    const ext = attributes.lang ? `.${attributes.lang}` : \".css\";\n    if (attributes.lang && !isCSSRequest(ext))\n      return;\n    if (!cssTransform)\n      cssTransform = createCssTransform(style, config).then((t) => cssTransform = t);\n    const transform = await cssTransform, suffix = `${lang_sep}${ext}`, moduleId = `${filename}${suffix}`, { code, map, deps } = await transform(content, moduleId);\n    removeLangSuffix(map, suffix);\n    mapToRelative(map, filename);\n    const dependencies = deps ? Array.from(deps).filter((d) => !d.endsWith(suffix)) : void 0;\n    return {\n      code,\n      map: map ?? void 0,\n      dependencies\n    };\n  }"},{"script":"({ content, filename }) => {\n    if (!filename)\n      return;\n    const basename = path.basename(filename);\n    if (basename.startsWith(\"+page.\") || basename.startsWith(\"+layout.\")) {\n      const match = content.match(options_regex);\n      if (match) {\n        const fixed = basename.replace(\".svelte\", \"(.server).js/ts\"), message = `\n${colors.bold().red(path.relative(\".\", filename))}\n\\`${match[1]}\\` will be ignored \\u2014 move it to ${fixed} instead. See https://svelte.dev/docs/kit/page-options for more information.`;\n        if (!warned.has(message)) {\n          console.log(message);\n          warned.add(message);\n        }\n      }\n    }\n  }","markup":"({ content, filename }) => {\n    if (!filename)\n      return;\n    const basename = path.basename(filename), has_children = content.includes(\"<slot\") || isSvelte5Plus() && content.includes(\"{@render\");\n    if (basename.startsWith(\"+layout.\") && !has_children) {\n      const message = `\n${colors.bold().red(path.relative(\".\", filename))}\n\\`<slot />\\`${isSvelte5Plus() ? \" or `{@render ...}` tag\" : \"\"}` + \" missing \\u2014 inner content will not be rendered\";\n      if (!warned.has(message)) {\n        console.log(message);\n        warned.add(message);\n      }\n    }\n  }"}]}